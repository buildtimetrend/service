{"name":"Buildtime Trend as a Service","tagline":"Visualise what's trending in your build process","body":"\r\nThis project offers the Buildtime Trend project as a service. The [Buildtime Trend library](https://github.com/buildtimetrend/python-lib) powers this service.\r\n\r\nUsage\r\n-----\r\n\r\nThe service is available (in beta) on Heroku, feel free to try it out : http://buildtimetrend.herokuapp.com/\r\n\r\nIt's available for free for Open Source projects (public on GitHub), thanks to [Keen.io](https://keen.io) for hosting the timing data.\r\n\r\nPrivate projects will be supported soon.\r\n\r\nComponents\r\n----------\r\n\r\n- [Index page](#index-page)\r\n- [Dashboard](#dashboard)\r\n- [Shield badges](#shield-badges)\r\n- [Process Travis CI build log](#process-travis-ci-build-log)\r\n\r\n### Index page\r\n- path : `/`\r\n\r\n### Dashboard\r\n\r\nDisplay a dashboard with Buildtime Trend charts\r\n\r\n- path : `/dashboard`\r\n- usage : `/dashboard/repo_owner/repo_name`\r\n- parameters :\r\n  - `repo_owner` : name of the Github repo owner, fe. `buildtimetrend`\r\n  - `repo_name` : name of the Github repo, fe. `service`\r\n\r\n> **Remark :** When visiting `/dashboard` (without parameters), an overview of all hosted projects is displayed.\r\n\r\n### Shield badges\r\n\r\nGenerate a shield badges\r\n\r\n- path : `/badge`\r\n- usage : `/badge/repo_owner/repo_name/badge_type/interval`\r\n- parameters :\r\n  - `repo_owner` : name of the Github repo owner, fe. `buildtimetrend`\r\n  - `repo_name` : name of the Github repo, fe. `service`\r\n  - `badge_type` : type of badge, options :\r\n    - `latest` : buildtime of last build job\r\n    - `avg` : average buildtime of buildjobs in period set by `interval` (default)\r\n    - `jobs` : number of build jobs in period set by `interval`\r\n    - `builds` : number of builds in period set by `interval`\r\n    - `passed` : percentage of successful build jobs during `interval`\r\n  - `interval` : time interval, options :\r\n    - `week` (default) : events of last week (last 7 days)\r\n    - `month` : events of last month (last 30 days)\r\n    - `year` : events of last year (last 52 weeks)\r\n\r\n#### Badge examples\r\n- ![Latest build duration](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/latest) : `/badge/buildtimetrend/service/latest`\r\n- ![Average buildtime (week)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/avg/week) : `/badge/buildtimetrend/service/avg/week`\r\n- ![Average buildtime (month)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/avg/month) : `/badge/buildtimetrend/service/avg/month`\r\n- ![Average buildtime (year)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/avg/year) : `/buildtimetrend/service/avg/year`\r\n- ![Build jobs (week)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/jobs/week) : `/badge/buildtimetrend/service/jobs/week`\r\n- ![Build jobs (month)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/jobs/month) : `/badge/buildtimetrend/service/jobs/month`\r\n- ![Build jobs (year)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/jobs/year) : `/buildtimetrend/service/jobs/year`\r\n- ![Builds (week)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/builds/week) : `/badge/buildtimetrend/service/builds/week`\r\n- ![Builds (month)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/builds/month) : `/badge/buildtimetrend/service/builds/month`\r\n- ![Builds (year)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/builds/year) : `/buildtimetrend/service/builds/year`\r\n- ![% passed build jobs (week)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/passed/week) : `/badge/buildtimetrend/service/passed/week`\r\n- ![% passed build jobs (month)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/passed/month) : `/badge/buildtimetrend/service/passed/month`\r\n- ![% passed build jobs (year)](https://buildtimetrend.herokuapp.com/badge/buildtimetrend/service/passed/year) : `/badge/buildtimetrend/service/passed/year`\r\n\r\n### Process Travis CI build log\r\n\r\nLoads a Travis CI build log file, processes it and sends the data to Keen.io.\r\n\r\n- path : `/travis`\r\n- usage : `/travis/repo_owner/repo_name/build`\r\n- parameters :\r\n  - `repo_owner` : name of the Github repo owner, fe. `buildtimetrend`\r\n  - `repo_name` : name of the Github repo, fe. `service`\r\n  - `build` : Travis CI build ID\r\n\r\nOR\r\n\r\n  - `payload` : Travis CI notification payload, more info in the [Travis CI documentation](http://docs.travis-ci.com/user/notifications/#Webhook-notification)\r\n\r\nTo trigger the service at the end of a Travis CI build, add this to your `.travis.yml` file:\r\n\r\n```yaml\r\n    notifications:\r\n      webhooks:\r\n        # trigger Buildtime Trend Service to parse Travis CI log and send result to Keen.io\r\n        - http://buildtimetrend.herokuapp.com/travis\r\n```\r\n\r\nWhen Buildtime Trend Service is triggered by a Travis CI notification, it will get the necessary parameters (repo name and build number) from the `payload` that is passed by Travis CI. This will trigger loading and parsing the Travis CI log of the corresponding build, the analysed data is stored in the Keen.io database.\r\n\r\n\r\nConfig file\r\n-----------\r\n\r\nAdd a configfile named `config_service.yml` based on `config_sample.yml` to configure the way the service behaves.\r\n\r\n- `allowed_repo` : defines which repos are allowed by the service. If the `allowed_repo` setting is not defined, all repos are allowed. If substring matches the repo name, it is allowed, so fe. `my_name` will allow `my_name/my_first_repo` and `my_name/another_repo`. A complete repo name is allowed as well.\r\nMultiple entries are allowed, fe. :\r\n\r\n```yaml\r\nbuildtimetrend:\r\n  allowed_repo:\r\n    - \"my_name\" # allowing all repo names that contain my_name\r\n    - \"another_name/some_repo\" # allows this specific repo\r\n```\r\n\r\n- `travis_account_token` : define to enable checking Travis CI notification Authorization header. More info on Travis CI Webhook Authorization and where to find the Account token : http://docs.travis-ci.com/user/notifications/#Authorization-for-Webhooks\r\n\r\n> **Remark :** the account token should be the one of the user who created the repo on Travis CI.\r\n\r\nIt can also be defined with the `TRAVIS_ACCOUNT_TOKEN` environment variable.\r\n\r\n- `loglevel` : defines loglevel, possible values : `DEBUG`, `INFO`, `WARNING` (default), `ERROR`\r\nIt can also be defined with the `BTT_LOGLEVEL` environment variable.\r\n\r\nDependencies\r\n------------\r\n\r\n- `buildtimetrend` : [Buildtime Trend library](https://github.com/buildtimetrend/python-lib)\r\n- `cherrypy` : [CherrPy](http://www.cherrypy.org/) A Minimalist Python Web Framework, making the API available as a web service\r\n\r\nBugs and feature requests\r\n-------------------------\r\n\r\nPlease report bugs and add feature requests in the Github [issue tracker](https://github.com/buildtimetrend/python-lib/issues).\r\n\r\n\r\nCredits\r\n-------\r\n\r\nFor an overview of who contributed to create Buildtime trend, see [Credits](https://github.com/buildtimetrend/python-lib/wiki/Credits).\r\n\r\nContact\r\n-------\r\n\r\nWebsite : http://buildtimetrend.github.io/service\r\n\r\nMailinglist : [Buildtime Trend Community](https://groups.google.com/d/forum/buildtimetrend-dev)\r\n\r\nFollow us on [Twitter](https://twitter.com/buildtime_trend), [Github](https://github.com/ruleant/buildtime-trend) and [OpenHub](https://www.openhub.net/p/buildtime-trend).","google":"UA-49318924-1","note":"Don't delete this file! It's used internally to help with page regeneration."}